[build-system]
requires = [
    "hatchling"
]
build-backend = "hatchling.build"

[project]
name = "mining-association-rules"
version = "0.1.0"
dynamic = ["dependencies", "optional-dependencies"]
requires-python = ">= 3.11"
authors = [
    {name = "Micha≈Ç Piekarski", email = "egzosted@gmail.com"}
]
description = "Package for generating association rules."
readme = "README.md"
keywords = ["association rules", "apriori", "frequent itemsets"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python"
]

[project.urls]
Homepage = "https://github.com/michalpiekarski777/mining-association-rules"
Repository = "https://github.com/michalpiekarski777/mining-association-rules.git"
Issues = "https://github.com/michalpiekarski777/mining-association-rules/issues"

[tool.hatch.dynamic]
dependencies = {file = ["requirements/base.txt"]}
optional-dependencies = {dev = { file = ["requirements-dev.txt"] }}

[tool.mypy]
warn_unused_ignores = true
warn_redundant_casts = true

[tool.ruff]
target-version = "py313"
line-length = 120

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  # "ARG", # Unused function argument
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  # "NPY",
  # "AIR",
  "PERF",
  # "FURB",
  # "LOG",
  "RUF",
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/,
  "PD901",
]

[tool.ruff.lint.isort]
force-single-line = true
